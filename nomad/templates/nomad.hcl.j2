#jinja2: trim_blocks:False
# {{ ansible_managed }}. Created on {{ template_run_date }}

region = "{{ nomad_region }}"
datacenter = "{{ nomad_datacenter }}"

data_dir = "/opt/nomad"
enable_syslog = {{ nomad_enable_syslog | to_json }}
bind_addr = {{ nomad_bind_addr | to_json }}

{% if nomad_addresses.http != none or nomad_addresses.rpc != none or nomad_addresses.serf != none %}
addresses {
  {% if nomad_addresses.http != none %}http = {{ nomad_addresses.http | to_json }}{% endif %}
  {% if nomad_addresses.rpc != none %}rpc = {{ nomad_addresses.rpc | to_json }}{% endif %}
  {% if nomad_addresses.serf != none %}serf = {{ nomad_addresses.serf | to_json }}{% endif %}
}
{% endif %}

{% if nomad_advertise.http != none or nomad_advertise.rpc != none or nomad_advertise.serf != none %}
advertise {
  {% if nomad_advertise.http != none %}http = {{ nomad_advertise.http | to_json }}{% endif %}
  {% if nomad_advertise.rpc != none %}rpc = {{ nomad_advertise.rpc | to_json }}{% endif %}
  {% if nomad_advertise.serf != none %}serf = {{ nomad_advertise.serf | to_json }}{% endif %}
}
{% endif %}

consul {
  token = "{{ nomad_consul_token }}"
}

{% if nomad_server %}
server {
  enabled = true
  bootstrap_expect = {{ nomad_bootstrap_expect }}
  encrypt = "{{ nomad_encrypt }}"

  server_join {
    retry_join = {{ nomad_retry_join | to_json }}
  }
}
{% else %}
client {
  enabled = true

{% if nomad_client_docker_auth_path %}
  options {
    "docker.auth.config" = "{{ nomad_client_docker_auth_path }}"
  }
{% endif %}

{% if nomad_client_network_interface %}
  network_interface = "{{ nomad_client_network_interface }}"
{% endif %}

  server_join {
    retry_join = {{ nomad_retry_join | to_json }}
  }
}
{% endif %}

{% if nomad_vault_enabled %}
vault {
  enabled = true
  address = "{{ nomad_vault_address }}"

  {% if nomad_server %}
  token = "{{ nomad_vault_token }}"
  create_from_role = "{{ nomad_vault_create_from_role }}"
  {% endif %}
}
{% endif %}
